name: Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow for manual triggers.

permissions:
  id-token: write  # Required for OIDC
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint pytest

      - name: Lint Python Code
        run: |
          pylint src/ rss_bouncer.py --disable=C,R --fail-under=8

      - name: Create Lambda Package
        run: |
          zip -r infrastructure/lambda_function.zip src/ rss_bouncer.py requirements.txt
          ls -la infrastructure/lambda_function.zip

      - name: Upload Lambda Package
        uses: actions/upload-artifact@v4
        with:
          name: lambda-package
          path: infrastructure/lambda_function.zip
          retention-days: 1

  plan:
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Lambda Package
        uses: actions/download-artifact@v4
        with:
          name: lambda-package
          path: infrastructure

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="raindrop_api_token_rss_to_raindrop_llm=${{ secrets.raindrop_api_token_rss_to_raindrop_llm }}" \
            -var="openai_api_token_rss_to_raindrop_llm=${{ secrets.openai_api_token_rss_to_raindrop_llm }}"

  deploy:
    needs: [plan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./infrastructure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Lambda Package
        uses: actions/download-artifact@v4
        with:
          name: lambda-package
          path: infrastructure

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.5"

      - name: Terraform Init
        run: terraform init

      - name: Delete Existing Resources
        run: |
          # Delete the IAM role if it exists
          aws iam delete-role --role-name rss_to_raindrop_lambda_role || true

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="raindrop_api_token_rss_to_raindrop_llm=${{ secrets.raindrop_api_token_rss_to_raindrop_llm }}" \
            -var="openai_api_token_rss_to_raindrop_llm=${{ secrets.openai_api_token_rss_to_raindrop_llm }}"